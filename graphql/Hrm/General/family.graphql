type Family{
    id: UUID
    name: String
    gender: String
    relationship: String
    employee_id: UUID
    employee: Employee @belongsTo
}

input CreateFamilyInput{
    name: String! @rules(apply:["required"])
    gender: String! @rules(apply:["required"])
    relationship: String! @rules(apply:["required"])
    employee_id: UUID! @rules(apply:["required"])
}

input UpdateFamilyInput{
    name: String
    gender: String
    relationship: String
    employee_id: UUID
}

extend type Mutation{
    insert_family_one(input: CreateFamilyInput! @spread): Family 
        @create(model: "App\\Models\\Hrm\\General\\Family")
    
    # insert_families(input: [CreateFamilyInput!]! @spread): Message 
    #     @field(resolver: "App\\GraphQL\\Mutations\\Hrm\\General\\Insert_families")

    update_family(id: UUID! @rules(apply:["required"]) @eq, input: UpdateFamilyInput! @spread): Family 
        @update(model: "App\\Models\\Hrm\\General\\Family")
    
    delete_family(id: UUID! @rules(apply:["required"])): Family 
        @delete(model: "App\\Models\\Hrm\\General\\Family")
}

# extend type Query @guard{
#     get_address(id: String! @rules(apply:["required"]) @eq): Address
#         @find(model: "App\\Models\\Hrm\\General\\Address")
        
#     get_all_address: [Address]
#         @all(model: "App\\Models\\Hrm\\General\\Address")
# }