type Department{
    id: ID!
    name: String!
    remark: String
    phone_no: String!
    company_id: String!
    parent_id: String!
    company: Company!
}

input CreateDepartmentInput{
    name: String! @rules(apply:["required"])
    remark: String
    phone_no: String
    company_id: String! @rules(apply:["required"])
    parent_id: String
}

input UpdateDepartmentInput{
    name: String
    remark: String
    phone_no: String
    company_id: String
    parent_id: String
}

extend type Mutation @guard{
    insert_department(input: DepartmentInput! @spread): Department 
        @create( model: "App\\Models\\Hrm\\General\\Department")

    update_department(id: String! @rules(apply:["required"]) @eq, input: UpdateDepartmentInput! @spread): Department 
        @update( model: "App\\Models\\Hrm\\General\\Department")

    delete_department(id: String! @rules(apply:["required"])): Department 
        @delete( model: "App\\Models\\Hrm\\General\\Department")
}

# extend type Query @guard{
#     get_department(id: String! @eq): Department 
#         @all( model: "App\\Models\\Hrm\\General\\Department")
        
#     get_all_department(id: String!): Department 
#         @all( model: "App\\Models\\Hrm\\General\\Department")
# }