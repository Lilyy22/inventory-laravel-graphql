type EmergencyContact{
    id: UUID
    name: String
    phone_no: String
    employee_id: UUID
    employee: Employee @belongsTo
}

input CreateEmergencyContactInput{
    name: String!  @rules(apply:["required"])
    phone_no: String!  @rules(apply:["required"])
    employee_id: UUID!  @rules(apply:["required"])
}

input UpdateEmergencyContactInput{
    name: String 
    phone_no: String 
    employee_id: UUID 
}

extend type Mutation{
    insert_emergencyContact_one(input: CreateEmergencyContactInput! @spread): EmergencyContact 
        @create(model: "App\\Models\\Hrm\\General\\EmergencyContact")
    
    # insert_emergencyContacts(input: [CreateEmergencyContactInput!]! @spread): Message 
    #     @field(resolver: "App\\GraphQL\\Mutations\\Hrm\\General\\Insert_emergencyContacts")

    update_emergencyContact(id: UUID! @rules(apply:["required"]) @eq, input: UpdateEmergencyContactInput! @spread): EmergencyContact 
        @update(model: "App\\Models\\Hrm\\General\\EmergencyContact")
    
    delete_emergencyContact(id: UUID! @rules(apply:["required"])): EmergencyContact 
        @delete(model: "App\\Models\\Hrm\\General\\EmergencyContact")
}

# extend type Query @guard{
#     get_address(id: String! @rules(apply:["required"]) @eq): Address
#         @find(model: "App\\Models\\Hrm\\General\\Address")
        
#     get_all_address: [Address]
#         @all(model: "App\\Models\\Hrm\\General\\Address")
# }